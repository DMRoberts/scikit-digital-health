name: Build_and_Publish_test

on: workflow_dispatch

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]  # use windows-2019 because it still has a working fortran compiler installed
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref_name }}
      - uses: actions/setup-python@v4
      - uses: fortran-lang/setup-fortran@v1
        if: runner.os == 'Windows'
        id: setup-fortran
        with:
          compiler: gcc
          version: 12
      - run: ${{ env.FC }} --version
        if: runner.os == 'Windows'
        env:
          FC: ${{ steps.setup-fortran.outputs.fc }}
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel
      - name: Build wheels
        env:
          CIBW_SKIP: pp* cp36-* cp37-* *musllinux*
          CIBW_ARCHS_MACOS: x86_64
          CIBW_ARCHS_LINUX: auto64
          CIBW_ARCHS_WINDOWS: auto64
          CIBW_BEFORE_BUILD_WINDOWS: "pip install delvewheel"
          CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel}"
          # FC: gfortran-12
        run: |
          # if macOS, make sure to set the environment variables so that it can find gfortran-9
          if [ "$RUNNER_OS" == "macOS" ]; then
            export FC=gfortran-12
          fi
          python -m cibuildwheel --output-dir wheelhouse
        shell: bash
      - name: Print for Debugging
        run: ls ./wheelhouse
      - name: Upload wheels
        uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl
